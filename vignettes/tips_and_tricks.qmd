---
title: "Tips & Tricks "
format:
  html:
    css: custom.css
tbl-colwidths: [20,20,50,10]
---

This page collects miscellaneous tips and tricks for **tinyplot**.

# Legend

## Opacity (`alpha`)

By default, the legend inherits the opacity of the plotted elements. In some cases, this may be undesirable. For example, in the following plot, the legend is too light:

```{r}
library(tinyplot)
x = rnorm(1e6)
y = x + rnorm(1e6)
z = sample(c("a", "b"), 1e6, replace = TRUE)
dat = data.frame(x, y, z)
tinyplot(y ~ x | z, data = dat, alpha = .1, pch = 19)
```

One solution is to draw our plot in two steps. First, we draw an empty plot with the desired (zero transparency) legend. Second, we add the transparent points on top of the existing canvas.

```{r}
tinyplot(y ~ x | z, data = dat, pch = 19, empty = TRUE)
tinyplot_add(empty = FALSE, alpha = .1)
```

# Labels

## Axis label rotation


When category labels are long or overlapping, users may want to rotate them for readability. Unfortunately, `tinyplot` does not currently support rotated axis labels out of the box. 

A simple workaround is to take three steps:

1. Suppress the default x-axis with `xaxt = "n"`.
2. Use `text()` to manually add rotated labels.
3. Optionally, clear the y-axis label by setting `ylab = ""`.

```{r}
library(tinyplot)
tinyplot(~cyl, data = mtcars, type = "barplot", xaxt = "n", ylab = "")
text(1:3, 0,
    labels = c("Four cylinders", "Six cylinders", "Eight cylinders"),
    srt = 45,          # rotate text 45 degrees
    adj = c(1.1, 1.5), # adjust text alignment
    xpd = TRUE)        # allow drawing outside plot region
```

Note that `adj` and `xpd` settings may require trial and error to position labels correctly. Also, removing the x-axis label by setting `ylab = ""` is unintuitive but currently necessary when using formulas like `~ cyl`.